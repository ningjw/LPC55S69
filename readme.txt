MDK版本需要选择5.29.0, 否则编译会出现很多莫名其妙的问题

内部Flash空间: 0x00000000 - 0x0009D000 (628 KB on-chip flash)
1. boo空间:共32k
interrupts:0x00000000 - 0x00000200
代码空间:  0x00000200 - 0x00008000

2. core1 : 共32k
代码空间:0x00008000 - 0x00010000

3. core0 : 共128k
interrupts:0x00010000 - 0x00010200
代码空间:  0x00010200 - 0x00030000

4.core1升级数据空间:32k
0x00030000 - 0x00038000

5.core0升级数据空间:128k
0x00038000 - 0x00058000

6.保存ADC数据,用于计算FFT的空间:192k
0x00058000 - 0x00088000

7.参数保存空间: 1k
0x00088000 - 

----------无线板, STLink板子线序----------------------------------------
靠近J2连接器的为紫色, 线序为: 紫灰白黑
SWCLK  ->  黑色
SWDIO  ->  灰色
GND    ->  白色
3.3V   ->  紫色 -> 板子上J2标号的引脚

----------无线板, DAP板子线序----------------------------------------
CLK  -> 黑色
DIO  -> 灰色
GND  -> 白色
----------开发板, STLink板子线序----------------------------------------
STLink板子线序:
红色靠J2标号引脚, 颜色线序为: 红灰黑白
STlink接线:
RST->红色->靠近J2标号的引脚(可不接)
SWCLK->灰色
SWDIO->白色
GND->黑色

NFC模块与USB转TTL的接线:黄白红黑


UST转TTL各颜色线对用的名称:
红: 5V ;  黑: GND;   绿:TXD;  白:RXD
在UART ISP是, TTL的白色线连接TP3触电, 绿色线连接另外一个触电, 


在使用开发板调试NFC模块时,需要在pin_mux.c文件中初始化PIO1_26之前添加延时
for(uint32_t i=0; i<1000000; i++){}
/* Initialize GPIO functionality on pin PIO1_26 (pin E13)  */

-----------LPC55S69外设使用情况-------------------------------------------
FLEXCOMM0 -> SPI -> ADS1271
FLEXCOMM1 -> IIC ->  温度传感器(采用io模拟)
FLEXCOMM2 -> UART -> CAT1模块
FLEXCOMM3 -> UART -> wifi模块
FLEXCOMM4 -> IIC  -> 电池管理芯片/SI5351A-B时钟产生芯片 (采用io模拟)
FLEXCOMM5 -> UART -> NFC模块
FLEXCOMM6 -> SPI  -> W25Q128JVPIQTR

TIMER0 -> PIO0_0  -> 用于产生ADS1271时钟
TIMER2 -> PIO1_4  -> 滤波器芯片时钟
TIMER3 -> 用于定时唤醒芯片

-------------------------------------------------------------------
电源控制芯片使用AP2281-1WG-7芯片,该芯片的EN引脚为高电平有效.

usb转3.3V小模块耗电14mA

--------无线板,检测点说明-----------------------------------------------
ADC芯片工作时钟 -> TP6
滤波器工作时钟  -> TP10
ADC_RDY         -> TP4
ADC_SPI_CLK     -> TP5

--------电池电压与mLpadcResult.convValue变量的曲线图-----------------------
电池电压(V)           mLpadcResult.convValue
4.0                   8040
3.9                   8280
3.8                   8500
3.7                   8760
3.6                   9010
3.5                   9300
3.4                   9570
3.3                   9880
3.2                   10200
3.1                   10540
3.0                   10900
根据以上得出关系式为
g_sys_para.batVoltage = (67793.0 - 3.5028 * mLpadcResult.convValue) / 10000.0;



