/***********************************************************************************************************************
 * This file was generated by the MCUXpresso Config Tools. Any manual edits made to this file
 * will be overwritten if the respective MCUXpresso Config Tools is used to update this file.
 **********************************************************************************************************************/

#ifndef _PERIPHERALS_H_
#define _PERIPHERALS_H_

/***********************************************************************************************************************
 * Included files
 **********************************************************************************************************************/
#include "fsl_dma.h"
#include "fsl_common.h"
#include "fsl_ctimer.h"
#include "fsl_clock.h"
#include "fsl_spi.h"
#include "fsl_i2c.h"
#include "fsl_reset.h"
#include "fsl_usart.h"
#include "fsl_pint.h"
#include "fsl_rtc.h"
#include "fsl_utick.h"

#if defined(__cplusplus)
extern "C" {
#endif /* __cplusplus */

/***********************************************************************************************************************
 * Definitions
 **********************************************************************************************************************/
/* Definitions for BOARD_InitPeripherals functional group */
/* Used DMA device. */
#define DMA0_DMA_BASEADDR DMA0
/* DMA0 interrupt vector ID (number). */
#define DMA0_IRQN DMA0_IRQn

  /* Channel CH0 definitions */
/* Selected DMA channel number. */
#define DMA0_CH0_DMA_CHANNEL 0
/* Definition of peripheral ID */
#define CTIMER1_PERIPHERAL CTIMER1
/* Timer tick frequency in Hz (input frequency of the timer) */
#define CTIMER1_TICK_FREQ 1000000UL
/* Timer tick period in ns (input period of the timer) */
#define CTIMER1_TICK_PERIOD 1000UL
/* BOARD_InitPeripherals defines for FLEXCOMM0 */
/* Definition of peripheral ID */
#define FLEXCOMM0_PERIPHERAL ((SPI_Type *)FLEXCOMM0)
/* Definition of the clock source frequency */
#define FLEXCOMM0_CLOCK_SOURCE 12000000UL
/* BOARD_InitPeripherals defines for FLEXCOMM1 */
/* Definition of peripheral ID */
#define FLEXCOMM1_PERIPHERAL ((I2C_Type *)FLEXCOMM1)
/* Definition of the clock source frequency */
#define FLEXCOMM1_CLOCK_SOURCE 12000000UL
/* Definition of peripheral ID */
#define FLEXCOMM2_PERIPHERAL ((USART_Type *)FLEXCOMM2)
/* Definition of the clock source frequency */
#define FLEXCOMM2_CLOCK_SOURCE 12000000UL
/* FLEXCOMM2 interrupt vector ID (number). */
#define FLEXCOMM2_FLEXCOMM_IRQN FLEXCOMM2_IRQn
/* FLEXCOMM2 interrupt handler identifier. */
#define FLEXCOMM2_FLEXCOMM_IRQHANDLER FLEXCOMM2_IRQHandler
/* Definition of peripheral ID */
#define FLEXCOMM3_PERIPHERAL ((USART_Type *)FLEXCOMM3)
/* Definition of the clock source frequency */
#define FLEXCOMM3_CLOCK_SOURCE 12000000UL
/* BOARD_InitPeripherals defines for FLEXCOMM6 */
/* Definition of peripheral ID */
#define FLEXCOMM6_PERIPHERAL ((SPI_Type *)FLEXCOMM6)
/* Definition of the clock source frequency */
#define FLEXCOMM6_CLOCK_SOURCE 12000000UL
/* BOARD_InitPeripherals defines for PINT */
/* Definition of peripheral ID */
#define PINT_PERIPHERAL ((PINT_Type *) PINT_BASE)
/* PINT interrupt vector ID (number). */
#define PINT_PINT_1_IRQN PIN_INT1_IRQn
/* Definition of PINT interrupt ID for interrupt 1  */
#define PINT_INT_1 kPINT_PinInt1
/* Definition of PINT interrupt ID for interrupt 2  */
#define PINT_INT_2 kPINT_PinInt2
/* Definition of peripheral ID */
#define RTC_PERIPHERAL RTC
/* BOARD_InitPeripherals defines for UTICK0 */
/* Definition of peripheral ID */
#define UTICK0_PERIPHERAL UTICK0
/* Definition of kUTICK_Repeat operational mode */
#define UTICK0_MODE kUTICK_Repeat
/* Timer tick frequency in Hz (input frequency of the timer) */
#define UTICK0_TICK_FREQ 1000000UL
/* Timer tick period in ns (input period of the timer) */
#define UTICK0_TICK_PERIOD 1000UL
/* Definition of timer value in ticks */
#define UTICK0_TICKS 999999UL
/* UTICK0 interrupt vector ID (number). */
#define UTICK0_IRQN UTICK0_IRQn

/***********************************************************************************************************************
 * Global variables
 **********************************************************************************************************************/
extern dma_handle_t DMA0_CH0_Handle;
extern const ctimer_config_t CTIMER1_config;
extern const spi_master_config_t FLEXCOMM0_config;
extern const i2c_master_config_t FLEXCOMM1_config;
extern const usart_config_t FLEXCOMM2_config;
extern const usart_config_t FLEXCOMM3_config;
extern const spi_master_config_t FLEXCOMM6_config;

/***********************************************************************************************************************
 * Callback functions
 **********************************************************************************************************************/
/* INT_1 callback function for the PINT component */
extern void PINT1_CallBack(pint_pin_int_t pintr ,uint32_t pmatch_status);
/* INT_2 callback function for the PINT component */
extern void PINT2_CallBack(pint_pin_int_t pintr ,uint32_t pmatch_status);
/* UTICK0 callback function */
extern void UTICK0_Callback(void);

/***********************************************************************************************************************
 * Initialization functions
 **********************************************************************************************************************/
void BOARD_InitPeripherals(void);

/***********************************************************************************************************************
 * BOARD_InitBootPeripherals function
 **********************************************************************************************************************/
void BOARD_InitBootPeripherals(void);

#if defined(__cplusplus)
}
#endif

#endif /* _PERIPHERALS_H_ */
