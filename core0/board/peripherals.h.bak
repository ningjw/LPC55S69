/***********************************************************************************************************************
 * This file was generated by the MCUXpresso Config Tools. Any manual edits made to this file
 * will be overwritten if the respective MCUXpresso Config Tools is used to update this file.
 **********************************************************************************************************************/

#ifndef _PERIPHERALS_H_
#define _PERIPHERALS_H_

/***********************************************************************************************************************
 * Included files
 **********************************************************************************************************************/
#include "fsl_dma.h"
#include "fsl_common.h"
#include "fsl_ctimer.h"
#include "fsl_clock.h"
#include "fsl_reset.h"
#include "fsl_usart.h"
#include "fsl_usart_dma.h"
#include "fsl_i2c.h"
#include "fsl_i2c_dma.h"
#include "fsl_spi.h"
#include "fsl_rtc.h"

#if defined(__cplusplus)
extern "C" {
#endif /* __cplusplus */

/***********************************************************************************************************************
 * Definitions
 **********************************************************************************************************************/
/* Definitions for BOARD_InitPeripherals functional group */
/* Used DMA device. */
#define DMA0_DMA_BASEADDR DMA0
/* DMA0 interrupt vector ID (number). */
#define DMA0_IRQN DMA0_IRQn

  /* Channel CH0 definitions */
/* Selected DMA channel number. */
#define DMA0_CH0_DMA_CHANNEL 0
/* Definition of peripheral ID */
#define CTIMER0_PERIPHERAL CTIMER0
/* Timer tick frequency in Hz (input frequency of the timer) */
#define CTIMER0_TICK_FREQ 10000000UL
/* Timer tick period in ns (input period of the timer) */
#define CTIMER0_TICK_PERIOD 100UL
/* Definition of PWM period */
#define CTIMER0_PWM_PERIOD 10000000
/* Definition of channel 0 ID */
#define CTIMER0_PWM0_CHANNEL kCTIMER_Match_0
/* Definition of channel 0 duty */
#define CTIMER0_PWM0_DUTY 1
/* Definition of channel 1 ID */
#define CTIMER0_PWM1_CHANNEL kCTIMER_Match_1
/* Definition of channel 1 duty */
#define CTIMER0_PWM1_DUTY 1000
/* Definition of peripheral ID */
#define FLEXCOMM0_PERIPHERAL ((USART_Type *)FLEXCOMM0)
/* Definition of the clock source frequency */
#define FLEXCOMM0_CLOCK_SOURCE 12000000UL
/* Selected DMA channel number. */
#define FLEXCOMM0_RX_DMA_CHANNEL 4
/* Used DMA device. */
#define FLEXCOMM0_RX_DMA_BASEADDR DMA0
/* Selected DMA channel number. */
#define FLEXCOMM0_TX_DMA_CHANNEL 5
/* Used DMA device. */
#define FLEXCOMM0_TX_DMA_BASEADDR DMA0
/* BOARD_InitPeripherals defines for FLEXCOMM1 */
/* Definition of peripheral ID */
#define FLEXCOMM1_PERIPHERAL ((I2C_Type *)FLEXCOMM1)
/* Definition of the clock source frequency */
#define FLEXCOMM1_CLOCK_SOURCE 12000000UL
/* Selected DMA channel number. */
#define FLEXCOMM1_I2CMASTER_DMA_CHANNEL 7
/* Used DMA device. */
#define FLEXCOMM1_I2CMASTER_DMA_BASEADDR DMA0
/* BOARD_InitPeripherals defines for FLEXCOMM2 */
/* Definition of peripheral ID */
#define FLEXCOMM2_PERIPHERAL ((SPI_Type *)FLEXCOMM2)
/* Definition of the clock source frequency */
#define FLEXCOMM2_CLOCK_SOURCE 12000000UL
/* Definition of peripheral ID */
#define RTC_PERIPHERAL RTC
/* Real input time for Wake-up timer. */
#define RTC_WAKE_UP_TIME 10
/* Definition of peripheral ID */
#define CTIMER1_PERIPHERAL CTIMER1
/* Timer tick frequency in Hz (input frequency of the timer) */
#define CTIMER1_TICK_FREQ 1000000UL
/* Timer tick period in ns (input period of the timer) */
#define CTIMER1_TICK_PERIOD 1000UL

/***********************************************************************************************************************
 * Global variables
 **********************************************************************************************************************/
extern dma_handle_t DMA0_CH0_Handle;
extern const ctimer_config_t CTIMER0_config;
extern const usart_config_t FLEXCOMM0_config;
extern dma_handle_t FLEXCOMM0_RX_Handle;
extern dma_handle_t FLEXCOMM0_TX_Handle;
extern usart_dma_handle_t FLEXCOMM0_USART_DMA_Handle;
extern const i2c_master_config_t FLEXCOMM1_config;
extern dma_handle_t FLEXCOMM1_I2CMaster_Handle;
extern i2c_master_dma_handle_t FLEXCOMM1_DMA_Handle;
extern const spi_master_config_t FLEXCOMM2_config;
/* Date and time structure */
extern rtc_datetime_t RTC_dateTimeStruct;
extern const ctimer_config_t CTIMER1_config;

/***********************************************************************************************************************
 * Initialization functions
 **********************************************************************************************************************/
void BOARD_InitPeripherals(void);

/***********************************************************************************************************************
 * BOARD_InitBootPeripherals function
 **********************************************************************************************************************/
void BOARD_InitBootPeripherals(void);

#if defined(__cplusplus)
}
#endif

#endif /* _PERIPHERALS_H_ */
